name: Build and Test

on:
    - pull_request

jobs:
    install_cms:
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: cms
        env:
            UNSKIP_DECR: 'false' # do not decrypt the .env files

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  persist-credentials: false

            - name: Get CMS modules
              uses: actions/cache@v2
              id: cache
              with:
                  path: ./*
                  key: ${{ runner.os }}-cms8-${{ hashFiles('**/package-lock.json') }}

            - name: show cache status
              run: |
                  echo ${{steps.cache.outputs.cache-hit}}

            - name: Get Node
              uses: actions/setup-node@v2
              with:
                  node-version: 14.x

            - name: Use npm version 7
              run: |
                  npm install -g npm@7

            - name: Install dependencies
              run: npm install # do not do npm ci because there are local npm packages
              if: steps.cache.outputs.cache-hit != 'true' # if cache could not be found, output will be blank

            - name: Cache all of the above
              uses: actions/cache@v2
              id: cache-cms
              with:
                  path: ./*
                  key: cms-${{github.sha}}

    build_cms:
        runs-on: ubuntu-latest
        needs: install_cms
        env:
            NODE_ENV: production
            UNSKIP_DECR: 'false'

        defaults:
            run:
                working-directory: cms

        steps:
            - name: restore cache
              uses: actions/cache@v2
              id: restore-cms-build
              with:
                  path: ./*
                  key: cms-${{github.sha}}

            - name: build cms dashboard
              run: npm run build

    test_cms:
        runs-on: ubuntu-latest
        needs: install_cms

        defaults:
            run:
                working-directory: cms
        steps:
            - name: restore cache
              uses: actions/cache@v2
              id: restore-cms-test
              with:
                  path: ./*
                  key: cms-${{github.sha}}
            - name: api tests
              run: npm run test

            - name: save tests code coverage
              uses: actions/upload-artifact@v2
              with:
                  name: backend-integration-test-coverage-${{github.sha}}
                  path: coverage

    install_dis:
        runs-on: ubuntu-latest

        env:
            UNSKIP_DECR: 'false'

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  persist-credentials: false

            - name: Get DIS modules
              uses: actions/cache@v2
              id: cache
              with:
                  path: ./*
                  key: ${{ runner.os }}-dis6-${{ hashFiles('**/package.json') }}

            - name: Get Node
              uses: actions/setup-node@v2
              with:
                  node-version: 14.x

            - name: Use npm version 7
              run: |
                  npm install -g npm@7

            - name: Install dependencies
              run: npm ci
              if: steps.cache.outputs.cache-hit != 'true'

            - name: Install cms
              run: npm install --prefix cms
              if: steps.cache.outputs.cache-hit != 'true'

            - name: Cache all of the above
              uses: actions/cache@v2
              id: cache-dis
              with:
                  path: ./*
                  key: dis-${{github.sha}}

    test_dis_unit:
        runs-on: ubuntu-latest
        needs: install_dis

        steps:
            - name: restore cache
              uses: actions/cache@v2
              id: restore-dis-test-unit
              with:
                  path: ./*
                  key: dis-${{github.sha}}

            - name: run unit tests
              run: npm run test:unit

            - name: save unit test code coverage
              uses: actions/upload-artifact@v2
              with:
                  name: frontend-unit-test-coverage-${{github.sha}}
                  path: coverage

    # test_dis_integration:
    #     runs-on: ubuntu-latest
    #     needs:
    #         - install_dis
    #         - install_cms

    #     steps:
    #         - name: restore dis cache
    #           uses: actions/cache@v2
    #           id: restore-dis-test-integration
    #           with:
    #               path: ./*
    #               key: dis-${{github.sha}}

    #         - name: restore cms cache
    #           uses: actions/cache@v2
    #           id: restore-cms-dis-test
    #           with:
    #               path: cms
    #               key: cms

    #         - name: run integration tests
    #           run: npm run test:integration

    #         - name: save integration tests code coverage
    #           uses: actions/upload-artifact@v2
    #           with:
    #               name: frontend-integration-test-coverage-${{github.sha}}
    #               path: coverage

    build_dis:
        runs-on: ubuntu-latest
        needs:
            - install_dis

        steps:
            - name: restore dis cache
              uses: actions/cache@v2
              id: restore-dis-test-integration
              with:
                  path: ./*
                  key: dis-${{github.sha}}

            - name: list everything
              run: |
                  ls -a .
                  ls cms/

            - name: Build NextJS
              run: |
                  npm run server:testing & npm run build

    install_webhook_hapi:
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: webhooks/strapi

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  persist-credentials: false

            - name: Get HAPI modules
              uses: actions/cache@v2
              id: cache
              with:
                  path: ./*
                  key: ${{ runner.os }}-hapi3-${{ hashFiles('**/package-lock.json') }}

            - name: Get Node
              uses: actions/setup-node@v2
              with:
                  node-version: 14.x

            - name: Use npm version 7
              run: |
                  npm install -g npm@7

            - name: Install dependencies
              run: npm ci
              if: steps.cache.outputs.cache-hit != 'true'

            - name: Cache all of the above
              uses: actions/cache@v2
              id: cache-hapi
              with:
                  path: ./*
                  key: hapi-${{github.sha}}

    test_webhook_hapi:
        runs-on: ubuntu-latest
        needs:
            - install_webhook_hapi
        env:
            NODE_ENV: production

        defaults:
            run:
                working-directory: webhooks/strapi

        steps:
            - name: restore hapi cache
              uses: actions/cache@v2
              id: restore-hapi
              with:
                  path: ./*
                  key: hapi-${{github.sha}}

            - name: test hapi
              run: npm test
